#version 330 core
#extension GL_EXT_texture_array : enable

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexUV;

// Output data ; will be interpolated for each fragment.
out vec3 UVL;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;

void main(){

	// Output position of the vertex, in clip space : MVP * position
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1);
	
	// UV of the vertex. No special space for this one.
	//if(textureIDin == uint(2))
	//{
	//	//UVL = vec3(vertexUV.x, vertexUV.y, (float(textureIDin)/float(texturecount)));
	//}
	//else
	//{
	//	UVL = vec3(vertexUV.x, vertexUV.y, 3.0);
	//}
	//UVL = vec3(vertexUV.x, vertexUV.y, (max(0, min(4 - 1, floor(float(textureIDin) + 0.5)))) );
	UVL = vertexUV;
}

